<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>scriptlogccbackup.pm</title>
<link rev="made" href="mailto:" />
</head>

<body style="background-color: white">

<p><a name="__index__"></a></p>
<!-- INDEX BEGIN -->

<ul>

	<li><a href="#synopsis">SYNOPSIS</a></li>
	<ul>

		<li><a href="#setters">Setters</a></li>
		<li><a href="#getters">Getters</a></li>
		<li><a href="#methods">Methods</a></li>
	</ul>

	<li><a href="#description">DESCRIPTION</a></li>
	<li><a href="#author">AUTHOR</a></li>
	<li><a href="#bugs">BUGS</a></li>
	<li><a href="#copyright">COPYRIGHT</a></li>
</ul>
<!-- INDEX END -->

<hr />
<p>
</p>
<h1><a name="synopsis">SYNOPSIS</a></h1>
<p>
</p>
<h2><a name="setters">Setters</a></h2>
<pre>
 set_logfile( pname )
 set_verbose( 0|1 )</pre>
<p>
</p>
<h2><a name="getters">Getters</a></h2>
<pre>
 get_information_count( )
 get_warning_count( )
 get_error_count( )
 get_logfile( )</pre>
<p>
</p>
<h2><a name="methods">Methods</a></h2>
<pre>
 enable( )
 conditional_enable( [flag] )
 disable( ) 
 information( msg )
 warning( msg )
 error( msg )
 assertion_failed( msg )
 dump_array( array )
 dump_ccavars( ) 
 get_accumulated_errorlevel( )</pre>
<p>
</p>
<hr />
<h1><a name="description">DESCRIPTION</a></h1>
<p>Creating the log object is straight forward:</p>
<pre>
  our $log = scriptlog-&gt;new;</pre>
<p>The log is not enabled directly upon creation, you need to 
make a call to the enable metode first:</p>
<pre>
  $log-&gt;enable;</pre>
<p>Using the class like this will generate the logfile automatically.
the log file will be in the directory of your TEMP environment variable
and named after the executing perl script suffixed with the process ID 
of the  running process and a .log extention</p>
<p>Sample:</p>
<p><em>maintainfrozen.pl</em> ...will create a log file: <em>c:\temp\maintainforzen.pl.PID2354.log</em></p>
<p>The logfile is always opened in concatenate mode.</p>
<p>If you want to control the location of the log file youself you simply 
make a call to the set_logfile method before you enable it:</p>
<pre>
  $log-&gt;set_logfile(&quot;c:\\mydir\\test.log&quot;);
  $log-&gt;enable;</pre>
<p>Be aware that the logfile class is not very forgiven on no-good 
file pathnames - The assumption is that if you are using the scriptlog 
class it's because you want a log to be created. Thus if the log 
creation fails then the executing script is dragged into the fall - and dies!</p>
<p>There is and alternative enable method you can use. It's called conditional_enable</p>
<pre>
  $log-&gt;conditional_enable</pre>
<p>It enables the log if one of the following conditions apply:</p>
<dl>
<dt><strong><a name="item_parameter_controlled">Parameter controlled</a></strong><br />
</dt>
<dd>
The method can be called with an optional parameter, if so it will be
be evaluated in a boolean context and if TRUE logging is enabled
</dd>
<p></p>
<dt><strong><a name="item_trace_subsys">TRACE_SUBSYS</a></strong><br />
</dt>
<dd>
An environment variable named TRACE_SUBSYS contains the name of the 
executing perlscript
</dd>
<dd>
<p>E.g. TRACE_SUBSYS=maintainfrozen.pl;evil_twin.pl
will turn on logging in maintainfrozen.pl and evil_twin.pl</p>
</dd>
<p></p>
<dt><strong><a name="item_scriptlog_enable">SCRIPTLOG_ENABLE</a></strong><br />
</dt>
<dd>
An Environment variable SCRIPTLOG_ENABLE is defined
This will effectively turn on logging in all executing script that used conditional_enable
</dd>
<p></p>
<dt><strong><a name="item_clearcase_trigger_debug">CLEARCASE_TRIGGER_DEBUG</a></strong><br />
</dt>
<dd>
An environment variable named CLEARCASE_TRIGGER_DEBUG is defined
This has the exact same effect as define the variable SCRIPTLOG_ENABLE, it's only 
added as a twist of syntactical sugar for the Clearcase trigger programmers
</dd>
<p></p></dl>
<p>Writing to to log is done through one of the three methods information, warning or error</p>
<pre>
  $log-&gt;information(&quot;Hey!\n&quot;);
  $log-&gt;warning(&quot;Watch out!\n&quot;);
  $log-&gt;error(&quot;WRONG!!!!\n&quot;);</pre>
<p>These loggings will turn up in the log prefixed with the a time stamp and a letter code to 
inform of the information level:</p>
<pre>
  10.43:35 [I]:   Hey!
  10.43:35 [W]:   Watch out!
  10.43:35 [E]:   WRONG!!!!</pre>
<p>Dumping arrays or CLEARCASE_* environment variables is alwas done at the information level:</p>
<pre>
  $log-&gt;dump_ccvars</pre>
<p>Will produce a log entry like:</p>
<pre>
  10.43:35 [I]:   Dumping CLEARCASE environment variables:
          CLEARCASE_PRIMARY_GROUP=CHM_Users</pre>
<p>The assertion_failed method will be the death of the executing script!!!
The message is printed to the log before the kill:</p>
<pre>
  $_ = `cleartool describe vob:\ThePVOB`;
  $? &amp;&amp; $log-&gt;assertion_failed(&quot;where's the PVOB? Can't live without it! ...Arrrrrrgh!\n&quot;);</pre>
<p>The information,warning and error counts come in handy if you want to exit you scripts
based on the severity level;</p>
<pre>
  $retval = ($log-&gt;get_error_count)?2:($log-&gt;get_warning_count)?1:0;</pre>
<p>Actually, if you go with the idea of the following exit codes</p>
<pre>
 2=You have logged errors
 1=You have logged warnings
 0=You have only logged informations or nothing at all</pre>
<p>The you can use the get_accumulated_errorlevel method:</p>
<pre>
  exit $log-&gt;get_accumulated_errorlevel;</pre>
<p>The verbose mode is turned off at class instantiation if you enable it, the messages are also 
written to STDOUT (informations) or STDERR (warnings, errors and assertion_fails)</p>
<p>
</p>
<hr />
<h1><a name="author">AUTHOR</a></h1>
<p>Lars Kruse, &lt;<a href="mailto:lars.kruse@praqma.net">lars.kruse@praqma.net</a>&gt;.</p>
<p>
</p>
<hr />
<h1><a name="bugs">BUGS</a></h1>
<p>None registered</p>
<p>
</p>
<hr />
<h1><a name="copyright">COPYRIGHT</a></h1>
<p>This program is distributed under the Friends Of Praqma license</p>
<a href="http://www.praqma.infoi">Visit Friends Of praqma</a>
</body>

</html>
